# Unloading/loading ALSA or Module
# 
# Author: Athirah Basir
# Created: 12 DEC 2019

#Last Edit: Zulhisham, Izzat Azfar (Modified script to make it able to run from THM.

import os
import argparse
import sys
import re
import subprocess
import GenericCommand


workingDir = "/home/siv_test_collateral/siv_val-io-test-apps/audio/"
dev_1_ip = "10.221.120.134"
gcs_port = "2300" # GenericCommandServer default port is 2300

#Module directory
sut_mod_dir = "/home/siv_test_collateral/siv_val-io-test-apps/audio/sut_check_modules.log"
f_sut_dir = "/home/siv_test_collateral/siv_val-io-test-apps/audio/f_sut_check_modules.log"

#Alsa directory
sut_alsa_dir = "/home/siv_test_collateral/siv_val-io-test-apps/audio/sut_check_alsa.log"
f_alsa_dir = "/home/siv_test_collateral/siv_val-io-test-apps/audio/f_sut_check_alsa.log"

host_dir = "/home/siv_test_collateral/siv_val-io-test-apps/audio/"



script_name = str(sys.argv[0])
usage = "python unloading/loading.py -c modules / ALSA"

parser = argparse.ArgumentParser(prog=script_name,
                                 formatter_class=argparse.RawTextHelpFormatter,
                                 description=usage)

parser.add_argument('-c', metavar='--checker', help='modules or ALSA')
parser.add_argument('-i', help='dut IP')

args = parser.parse_args()

print sys.argv[0:]

dev_1_ip = args.i


def Start_GenericCommandServer():
    command = os.popen('ps ax').read()
    #print "command:"+command
    read_list = re.compile("\n").split(command)
    generic = True
    for line in read_list:
        if re.search("GenericCommandServer", line):
            print "GenericCommandServer is Already Running"
            generic = False
            break
    if generic:
        subprocess.Popen(["python", workingDir+"GenericCommandServer.py"])
        subprocess.call(["echo", "genericcommandserver is started"])
    else:
        print "done"

Start_GenericCommandServer()
dut = GenericCommand.GenericCommand()
dut.login(dev_1_ip, gcs_port)


def alsa_filter():
    
    print "----- ALSA Checking: -----"

    dut.execute('cat /home/siv_test_collateral/siv_val-io-test-apps/audio/sut_check_alsa.log | cut -d " " -f 1 >> /home/siv_test_collateral/siv_val-io-test-apps/audio/f_sut_check_alsa.log')
    with open("/home/siv_test_collateral/siv_val-io-test-apps/audio/sut_check_alsa.log", "r") as fil:
         data = fil.readlines()
    
         for line in data:
             words = line.split()
             #print words[0]
             with open("/home/siv_test_collateral/siv_val-io-test-apps/audio/f_sut_check_alsa.log", "a") as fil2:
                 fil2.write(words[0])
                 fil2.write("\n")


os.system("scp root@"+dev_1_ip+":"+sut_alsa_dir+" "+host_dir)
os.system("scp root@"+dev_1_ip+":"+f_alsa_dir+" "+host_dir)

#1.2 function for check module
def alsa_checker():
    dut.execute("rm -rf /home/siv_test_collateral/siv_val-io-test-apps/audio/sut_check_alsa.log; rm -rf /home/siv_test_collateral/siv_val-io-test-apps/audio/f_sut_check_alsa.log")
    print "----- KMB ALSA  -----"

    
    if (os.path.isfile("/home/siv_test_collateral/siv_val-io-test-apps/audio/check_alsa.log")==0):
        print "Check Alsa file is missing !!! Exiting ..."
        sys.exit(0)

    dut.execute("dmesg | grep -i sound > /home/siv_test_collateral/siv_val-io-test-apps/audio/sut_check_alsa.log")
    alsa_filter()
    os.system("grep -Ff /home/siv_test_collateral/siv_val-io-test-apps/audio/f_sut_check_alsa.log /home/siv_test_collateral/siv_val-io-test-apps/audio/check_alsa.log > /home/siv_test_collateral/siv_val-io-test-apps/audio/alsa_compare.log")
    os.system("diff /home/siv_test_collateral/siv_val-io-test-apps/audio/alsa_compare.log /home/siv_test_collateral/siv_val-io-test-apps/audio/check_alsa.log > /home/siv_test_collateral/siv_val-io-test-apps/audio/alsa_compare1.log")

    #if dut.execute("du -k /home/siv_test_collateral/siv_val-io-test-apps/audio/alsa_compare1.log | cut -f 1") == 0:
    if (os.stat("/home/siv_test_collateral/siv_val-io-test-apps/audio/alsa_compare1.log").st_size == 0):
        alsa_check = 1
        print "\n"
        print "Alsa checker : PASS \n"
        print "Final Result = PASS \n"
    else:
        alsa_check = 0
        print "\n"
        print "Alsa checker : FAIL \n"
        print "Final Result = FAIL \n"


def modules_filter():
    print "-----Module Built-In: -----"

    dut.execute('cat /home/siv_test_collateral/siv_val-io-test-apps/audio/sut_check_modules.log | cut -d " " -f 1 >> /home/siv_test_collateral/siv_val-io-test-apps/audio/f_sut_check_modules.log')
	
        
	
    with open("/home/siv_test_collateral/siv_val-io-test-apps/audio/sut_check_modules.log", "r") as fil:
         data = fil.readlines()
    
         for line in data:
             words = line.split()
             #print words[0]
             with open("/home/siv_test_collateral/siv_val-io-test-apps/audio/f_sut_check_modules.log", "a") as fil2:
                 fil2.write(words[0])
                 fil2.write("\n")

os.system("scp root@"+dev_1_ip+":"+sut_mod_dir+" "+host_dir)
os.system("scp root@"+dev_1_ip+":"+f_sut_dir+" "+host_dir)

def modules_checker():
    uname = dut.execute('uname -r')
    uname = uname[:-1]

    dut.execute("rm -rf /home/siv_test_collateral/siv_val-io-test-apps/audio/sut_check_modules.log; rm -rf /home/siv_test_collateral/siv_val-io-test-apps/audio/f_sut_check_modules.log")
    #os.system("rm -rf /home/siv_test_collateral/siv_val-io-test-apps/audio/sut_check_modules.log; rm -rf /home/siv_test_collateral/siv_val-io-test-apps/audio/f_sut_check_modules.log")
    print "----- Modules Checking -----"

    
    if (os.path.isfile("/home/siv_test_collateral/siv_val-io-test-apps/audio/check_module.log")==0):
        print "Check Module file is missing !!! Exiting ..."
        sys.exit(0)

    dut.execute("cat /lib/modules/"+uname+"/modules.builtin | grep -i sound > /home/siv_test_collateral/siv_val-io-test-apps/audio/sut_check_modules.log")
    # os.system("cat /lib/modules/"+uname+"/modules.builtin | grep -i sound > /home/siv_test_collateral/siv_val-io-test-apps/audio/sut_check_modules.log")
    modules_filter()
    os.system("grep -Ff /home/siv_test_collateral/siv_val-io-test-apps/audio/f_sut_check_modules.log /home/siv_test_collateral/siv_val-io-test-apps/audio/check_module.log > /home/siv_test_collateral/siv_val-io-test-apps/audio/modules_compare.log")
    os.system("diff /home/siv_test_collateral/siv_val-io-test-apps/audio/modules_compare.log /home/siv_test_collateral/siv_val-io-test-apps/audio/check_module.log > /home/siv_test_collateral/siv_val-io-test-apps/audio/modules_compare1.log")
    #if os.system("du -k /home/siv_test_collateral/siv_val-io-test-apps/audio/modules_compare1.log | cut -f 1") == 0:
    if (os.stat("/home/siv_test_collateral/siv_val-io-test-apps/audio/modules_compare1.log").st_size == 0):
        mod_check = 1
        print "\n"
        print "Module checker : PASS \n"
        print "Final Result = PASS \n"
    else:
        mod_check = 0
        print "\n"
        print "Module checker : FAIL \n"
        print "Final Result = FAIL \n"



print "----- Unloading/loading testing -----"

if args.c is None:
    print "Insufficient parameters !! "
    sys.exit(0)
elif args.c == "modules":
    modules_checker()
elif args.c == "ALSA":
    alsa_checker()
elif args.i is not None:
    dev_1_ip = args.i
else:
    print "Invalid parameters !! "
    sys.exit(0)



