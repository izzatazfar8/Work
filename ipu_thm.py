import os, re, sys, time, argparse, subprocess, time
#from invoke import UnexpectedExit
import paramiko

script_name = str(sys.argv[0])
usage = "# python /home/THM/automation_script/IPU_checker_THM.py <IP> <option>"
parser = argparse.ArgumentParser(prog=script_name, description=usage)
parser.add_argument('-sut_ip', help='SUT IP')
parser.add_argument('-thm_ip', help='THM IP')
parser.add_argument('-op', help='Option = [streaming, driver_check]')

args = parser.parse_args()

if args.os == "ubuntu":
    target_user = 'ubuntu'
    target_pass = 'intel123'
    print ("Running on Ubuntu")
    os.system ("cd /home/applications.audio.validation.sve-bm-audio/ ; sudo sshpass -p 'intel123' scp -r siv_test_collateral/siv_val-io-test-apps/audio/siv_test_collateral_audio_SUT/ ubuntu@" + args.sut_ip + ":/home/ubuntu")
    
else:
    target_user = 'root'
    target_pass = ''
    print ("Running on Yocto")


#target_user = 'root'
#target_pass = ''

if args.sut_ip is not None:
    sut_ip = args.sut_ip
else:
    print ("-sut_ip missing")
    sys.exit(1)

if args.op is not None:
     option = args.op
else:
     print ("-op missing")
     sys.exit(1)

sut = paramiko.SSHClient()
sut.set_missing_host_key_policy(paramiko.AutoAddPolicy())
sut.connect(hostname=sut_ip,port=22,username=target_user,password=target_pass,allow_agent=False,look_for_keys=False)
# proc = subprocess.Popen(["prog", "arg"], stdout=subprocess.PIPE)
host,port = sut_ip,22
# transport = paramiko.Transport((host,port))
# username,password = "root",""
# transport.connect(None,username,password)
# sftp = paramiko.SFTPClient.from_transport(transport)

def main():

    if option == "ipu_driver_checker":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c ipu_driver_checker")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)

    elif option == "ipu_modules_checker":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c ipu_modules_checker")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    
    elif option == "exposure":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c exposure")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
		
    elif option == "digital_gain":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c digital_gain")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
        
    elif option == "analog_gain":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c analog_gain")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    
    elif option == "check_binary":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c check_binary")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)    
    elif option == "kernel_conf":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c kernel_conf")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
        
    elif option == "dynamic_conf":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c dynamic_conf")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
        
    elif option == "single_fps":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c single_fps")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)    
        
    elif option == "dual_fps":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c dual_fps")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)  
    elif option == "Pdata_dynamic_doc":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c Pdata_dynamic_doc")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "Pdata_kernel_doc":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c Pdata_kernel_doc")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "psys_conf_doc":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c psys_conf_doc")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "sensor_conf_doc":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c sensor_conf_doc")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
        
    elif option == "exposure_min_0":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c exposure_min_0")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)    
        
    elif option == "exposure_max_2355":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c exposure_max_2355")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)  
    elif option == "exposure_def_2355":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c exposure_def_2355")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "exposure_val_2355":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c exposure_val_2355")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
        
    elif option == "digital_gain_min_0":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c digital_gain_min_0")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)    
        
    elif option == "digital_gain_max_2047":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c digital_gain_max_2047")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)  
    elif option == "digital_gain_def_128":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c digital_gain_def_128")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "digital_gain_val_128":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c digital_gain_val_128")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
        
    elif option == "analog_gain_min_0":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c analog_gain_min_0")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)    
        
    elif option == "analog_gain_max_127":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c analog_gain_max_127")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)  
    elif option == "aptina1":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c aptina1")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "aptina2":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c aptina2")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "usb_app_exec":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c usb_app_exec")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "cam1_nv12":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c cam1_nv12")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "cam2_nv12":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c cam2_nv12")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "dual_nv12":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c dual_nv12")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "usb1_active":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c usb1_active")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "usb2_active":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c usb2_active")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "lib_check":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c lib_check")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "inc_check":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c inc_check")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "analog_gain_val_14":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c analog_gain_val_14")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    
    elif option == "suffix_a":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c suffix_a")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "suffix_b":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c suffix_b")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "slave_a":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c slave_a")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "slave_b":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c slave_b")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "lane_a":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c lane_a")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "lane_b":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c lane_b")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "port_a":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c port_a")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "port_b":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c port_b")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "build2_kernel":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c build2_kernel")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "build2_fw_bin":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c build2_fw_bin")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "build2_config":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c build2_config")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "build2_0x10_pipe":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c build2_0x10_pipe")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "sensor_conf_1":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c sensor_conf_1")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "sensor_conf_2":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c sensor_conf_2")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "subdev5":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c subdev5")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "mipi_1hour":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c mipi_1hour")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "usb_1hour":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c usb_1hour")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "mipi_24hour":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c mipi_24hour")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "subdev5_output":
        stdin, stdout, stderr = sut.exec_command("python3 /home/root/ipu_checker.py -c subdev5_output")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)

main()
