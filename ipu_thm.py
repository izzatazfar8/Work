import os, re, sys, time, argparse, subprocess, time
#from invoke import UnexpectedExit
import paramiko

script_name = str(sys.argv[0])
usage = "# python /home/THM/automation_script/IPU_checker_THM.py <IP> <option>"
parser = argparse.ArgumentParser(prog=script_name, description=usage)
parser.add_argument('-sut_ip', help='SUT IP')
parser.add_argument('-thm_ip', help='THM IP')
parser.add_argument('-op', help='Option = [streaming, driver_check]')
parser.add_argument('-sut_user', help='SUT User')
parser.add_argument('-sut_pass', help='SUT Password')
parser.add_argument('-os', help='OS')
parser.add_argument('-ipudevice', help='Optional: target ipu device ar0234 | lt6911uxc', default='ar0234')
parser.add_argument('-repo_path', help='Optional: local THM IPU repo path', default='/home/user/applications.validation.ipu.sve-ipu-master/')
args = parser.parse_args()

if args.os == "ubuntu":
    target_user = args.sut_user
    target_pass = args.sut_pass
    print ("Running on Ubuntu")
    #os.system ("sudo cp -r ipu_checker.py/ /home")
    
else:
    target_user = args.sut_user
    target_pass = args.sut_pass
    print ("Running on Yocto")

#target_user = 'root'
#target_pass = ''

if args.sut_ip is not None:
    sut_ip = args.sut_ip
else:
    print ("-sut_ip missing")
    sys.exit(1)

if args.op is not None:
     option = args.op
else:
     print ("-op missing")
     sys.exit(1)

sut = paramiko.SSHClient()
sut.set_missing_host_key_policy(paramiko.AutoAddPolicy())
sut.connect(hostname=sut_ip,port=22,username=target_user,password=target_pass,allow_agent=False,look_for_keys=False)
# proc = subprocess.Popen(["prog", "arg"], stdout=subprocess.PIPE)
host,port = sut_ip,22
# transport = paramiko.Transport((host,port))
# username,password = "root",""
# transport.connect(None,username,password)
# sftp = paramiko.SFTPClient.from_transport(transport)

def main():

    if option == "ipu_driver_checker":
	#stdin, stdout, stderr = sut.exec_command("rpm -ivh --nodeps --force /home/root/ipu_rpm_mr1/aiqb-1.0.0-202204101601.53b1709.x86_64.rpm")
	#time.sleep(5)
	#stdin, stdout, stderr = sut.exec_command("rpm -ivh --nodeps --force /home/root/ipu_rpm_mr1/libiaaiq-1.0.0-202204101559.4f5d560.x86_64.rpm")
	#time.sleep(5)
	#stdin, stdout, stderr = sut.exec_command("rpm -ivh --nodeps --force /home/root/ipu_rpm_mr1/libiacss-1.0.0-20220410_1500.20220410.678f932d.x86_64.rpm")
	#time.sleep(5)
	#stdin, stdout, stderr = sut.exec_command("rpm -ivh --nodeps --force /home/root/ipu_rpm_mr1/libcamhal-1.0.0-20220410_1500.20220410.a339062f.x86_64.rpm")
	#time.sleep(5)
	#stdin, stdout, stderr = sut.exec_command("rpm -ivh --nodeps --force /home/root/ipu_rpm_mr1/icamerasrc-1.0.0-20220410_1500.20220410.f162e1d.x86_64.rpm")
	#time.sleep(5)
	#stdin, stdout, stderr = sut.exec_command("rpm -ivh --nodeps --force /home/root/ipu_rpm_mr1/ipu6epfw-1.0.0-20220410_1500.20220410.be8cff5.signed.x86_64.rpm")
	#time.sleep(5)
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c ipu_driver_checker")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)

    elif option == "ipu_modules_checker":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c ipu_modules_checker")  #-ipudevice " + args.ipudevice
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)

    elif option == "copyfiles_fromhost":
        print ("\nSUT executing " + option + " command...\n")
        os_name = "Win" if os.name.rfind("nt") >= 0 else "Linux"
        destination = "%s@%s:%s" % (target_user,args.sut_ip,'/home/user/')
        source = args.repo_path + "/*"
        
        if os_name == "Linux":  #COPY FROM LINUX THM
            copy_cmd = "sshpass -p %s scp -r %s %s" %(target_pass,source,destination)
        else: #COPY FROM WINDOWS THM   , need install pscp https://www.putty.org/
            copy_cmd = "pscp -pw %s -r %s %s" %(target_pass,source,destination)
        print(copy_cmd)    
        subprocess.call(copy_cmd,shell=True) # Linux need shell=True for the sshpass copy work
    
    elif option == "lt6911uxc_detection_a":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c lt6911uxc_detection_a")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)

    elif option == "lt6911uxc_detection_b":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c lt6911uxc_detection_b")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)

    elif option == "rpm_loading":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c rpm_loading")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)
    elif option == "environment_checking":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c environment_checking")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)
    elif option == "bios_checking":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c bios_checking")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)
    elif option == "res_3840":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c res_3840")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)
    elif option == "res_2560":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c res_2560")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)
    elif option == "res_1920":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c res_1920")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)
    elif option == "res_1280":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c res_1280")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)
    elif option == "exposure":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c exposure")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)
    elif option == "3840_pipeline":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c pipeline_3840")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)
    elif option == "3840_60_pipeline":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c pipeline_3840_60")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)    
    elif option == "2560_pipeline":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c pipeline_2560")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)
    elif option == "1920_pipeline":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c pipeline_1920")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)
    elif option == "1280_pipeline":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c pipeline_1280")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)

    elif re.search("fps_\d\d\d\d_30hz", option):
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c " + option)
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)

    elif re.search("fps_\d\d\d\d_60hz", option):
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c " + option)
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0)

    elif re.search("hdmi_in_functional_\d\d\d\d_\d\dhz", option):  #hdmi_in_functional_\d\d\d\d_\d\dhz
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c " + option)
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("PASS")
        #print (output)

        sys.exit(0) 
    
    elif option == "digital_gain":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c digital_gain")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
        
    elif option == "analog_gain":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c analog_gain")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    
    elif option == "check_binary":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c check_binary")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)    
    elif option == "kernel_conf":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c kernel_conf")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
        
    elif option == "dynamic_conf":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c dynamic_conf")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
        
    elif option == "single_fps":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c single_fps")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)    
        
    elif option == "dual_fps":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c dual_fps")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)  
    elif option == "Pdata_dynamic_doc":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c Pdata_dynamic_doc")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "Pdata_kernel_doc":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c Pdata_kernel_doc")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "psys_conf_doc":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c psys_conf_doc")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "sensor_conf_doc":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c sensor_conf_doc")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
        
    elif option == "exposure_min_0":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c exposure_min_0")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)    
        
    elif option == "exposure_max_2355":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c exposure_max_2355")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)  
    elif option == "exposure_def_2355":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c exposure_def_2355")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "exposure_val_2355":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c exposure_val_2355")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
        
    elif option == "digital_gain_min_0":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c digital_gain_min_0")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)    
        
    elif option == "digital_gain_max_2047":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c digital_gain_max_2047")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)  
    elif option == "digital_gain_def_128":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c digital_gain_def_128")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "digital_gain_val_128":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c digital_gain_val_128")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
        
    elif option == "analog_gain_min_0":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c analog_gain_min_0")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)    
        
    elif option == "analog_gain_max_127":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c analog_gain_max_127")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)  
    elif option == "aptina1":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c aptina1")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "aptina2":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c aptina2")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "usb_app_exec":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c usb_app_exec")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "cam1_nv12":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c cam1_nv12")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "cam2_nv12":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c cam2_nv12")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "dual_nv12":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c dual_nv12")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "usb1_active":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c usb1_active")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "usb2_active":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c usb2_active")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "lib_check":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c lib_check")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "inc_check":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c inc_check")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "analog_gain_val_14":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c analog_gain_val_14")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    
    elif option == "suffix_a":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c suffix_a")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "suffix_b":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c suffix_b")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "slave_a":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c slave_a")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "slave_b":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c slave_b")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "lane_a":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c lane_a")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "lane_b":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c lane_b")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "port_a":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c port_a")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "port_b":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c port_b")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "build2_kernel":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c build2_kernel")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "build2_fw_bin":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c build2_fw_bin")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "build2_config":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c build2_config")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "build2_0x10_pipe":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c build2_0x10_pipe")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "sensor_conf_1":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c sensor_conf_1")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "sensor_conf_2":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c sensor_conf_2")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "subdev5":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c subdev5")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "mipi_1hour":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c mipi_1hour")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "usb_1hour":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c usb_1hour")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "usb_24hour":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c usb_24hour")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "mipi_24hour":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c mipi_24hour")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    elif option == "subdev5_output":
        stdin, stdout, stderr = sut.exec_command("python3 /home/" + target_user + "/ipu_checker.py -c subdev5_output")
        print ("\nSUT executing " + option + " command...\n")
        time.sleep(3)
        output = stdout.readlines()
        sut.close()
        print ("\nSUT output:\n")
        print (output)
        sys.exit(0)
    

main()
